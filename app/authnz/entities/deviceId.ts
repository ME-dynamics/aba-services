import type { entityTypes } from "../types";

export function buildMakeDeviceId() {
  return function makeDeviceId(
    info: entityTypes.IDeviceId
  ): entityTypes.IMadeDeviceId {
    const {
      deviceId,
      phoneNumber,
      deviceUniqueId,
      isDevice,
      platform,
      brand,
      manufacturer,
      model,
      modelId,
      designName,
      productName,
      deviceYearClass,
      supportedCpuArch,
      os,
      osVersion,
      osBuildId,
      osInternalBuildId,
      androidApiLevel,
      deviceName,
      createdAt = new Date(),
      modifiedAt = new Date(),
    } = info;
    const madeDeviceId: entityTypes.IMadeDeviceId = {
      get: {
        deviceId: () => deviceId,
        phoneNumber: () => phoneNumber,
        deviceUniqueId: () => deviceUniqueId,
        isDevice: () => isDevice,
        platform: () => platform,
        brand: () => brand,
        manufacturer: () => manufacturer,
        model: () => model,
        modelId: () => modelId,
        designName: () => designName,
        productName: () => productName,
        deviceYearClass: () => deviceYearClass,
        supportedCpuArch: () => supportedCpuArch,
        os: () => os,
        osVersion: () => osVersion,
        osBuildId: () => osBuildId,
        osInternalBuildId: () => osInternalBuildId,
        androidApiLevel: () => androidApiLevel,
        deviceName: () => deviceName,
        createdAt: () => createdAt,
        modifiedAt: () => modifiedAt,
      },
      object: () => ({
        deviceId,
        phoneNumber,
        deviceUniqueId,
        isDevice,
        platform,
        brand,
        manufacturer,
        model,
        modelId,
        designName,
        productName,
        deviceYearClass,
        supportedCpuArch,
        os,
        osVersion,
        osBuildId,
        osInternalBuildId,
        androidApiLevel,
        deviceName,
        createdAt,
        modifiedAt,
      }),
    };
    return madeDeviceId;
  };
}
